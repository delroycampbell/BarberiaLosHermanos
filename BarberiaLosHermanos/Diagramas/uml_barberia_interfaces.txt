@startuml
class MenuPrincipal {
  - GestorClientes gestorClientes
  - GestorEmpleados gestorEmpleados
  - GestorCitas gestorCitas
  - GestorServicios gestorServicios
  - GestorHorarios gestorHorarios
  + MostrarMenu()
  + MenuClientes()
  + MenuEmpleados()
  + MenuServicios()
  + MenuCitas()
}

class Cliente {
  - static int contadorID
  - int IdCliente
  - string Nombre
  - string Apellido1
  - string Apellido2
  - string Telefono
  - string Correo
  + Cliente(nombre, a1, a2, telefono, correo)
}

class Empleado {
  - static int contadorID
  - int IdEmpleado
  - string Nombre
  - string Apellido1
  - string Apellido2
  - string Telefono
  - string Correo
  - double Salario
  - PuestoEmpleado Puesto
  + Empleado(nombre, a1, a2, telefono, correo, puesto, salario)
  enum PuestoEmpleado { Barbero, Estilista, Asistente, Administrativo }
}

class Servicio {
  - static int contadorID
  - int IdServicio
  - string Nombre
  - double Precio
  - PuestoEmpleado TipoEmpleado
  + Servicio(nombre, precio, tipo)
}

class Cita {
  - static int contadorID
  - int IdCita
  - Cliente Cliente
  - Empleado Empleado
  - Servicio Servicio
  - DateTime FechaHora
  - EstadoCita Estado
  + Cita(cliente, empleado, servicio, fechaHora)
  enum EstadoCita { Pendiente, Confirmada, Cancelada }
}

class Horario {
  - DateTime Inicio
  - bool Disponible
  + Horario(fechaHora)
}

class GestorClientes {
  - List<Cliente> _clientes
  + RegistrarCliente(cliente)
  + BuscarPorNombre(nombre)
  + MostrarClientes()
}

class GestorEmpleados {
  - List<Empleado> _empleados
  + AgregarEmpleado(empleado)
  + MostrarEmpleados()
  + MostrarEmpleadosParaCita()
  + BuscarPorId(id)
}

class GestorServicios {
  - List<Servicio> _servicios
  + AgregarServicio(servicio)
  + ModificarServicio(id, nombre, precio, tipo)
  + EliminarServicio(id)
  + InicializarServiciosBase()
  + MostrarServicios()
  + BuscarServicioPorId(id)
}

class GestorCitas {
  - List<Cita> _citas
  + AgregarCita(cita)
  + CancelarCita(id)
  + ConfirmarCita(id)
  + MostrarTodas()
  + BuscarPorFecha(fecha)
  + MostrarPorCliente(idCliente)
  + ExisteCitaEnHorario(fechaHora, empleado)
}

class GestorHorarios {
  - GestorCitas gestorCitas
  + MostrarDiasDisponibles()
  + ObtenerDiasDisponibles()
  + ObtenerHorasDisponibles(dia, empleado)
  + MostrarHorasDisponibles(horas)
  + ReservarPorIndice(idx)
}

MenuPrincipal --> GestorClientes
MenuPrincipal --> GestorEmpleados
MenuPrincipal --> GestorCitas
MenuPrincipal --> GestorServicios
MenuPrincipal --> GestorHorarios

GestorCitas --> Cita
Cita --> Cliente
Cita --> Empleado
Cita --> Servicio
GestorHorarios --> Horario
GestorHorarios --> GestorCitas
GestorEmpleados --> Empleado
GestorClientes --> Cliente
GestorServicios --> Servicio
@enduml
